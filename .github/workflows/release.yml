name: Release Plugin

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle wrapper
      uses: actions/cache@v4
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/daemon
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

#    - name: Run tests
#      run: ./gradlew test

    - name: Build plugin
      run: ./gradlew buildPlugin

    - name: Verify plugin
      run: ./gradlew verifyPlugin

    - name: Prepare plugin repository
      run: ./gradlew preparePluginRepository

    - name: Get version and tag
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "tag_name=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag_name=v${VERSION}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.tag_name }}
        name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## 이번 릴리스의 변경사항
          
          - 플러그인 버전: ${{ steps.get_version.outputs.version }}
          - IntelliJ IDEA 빌드 233 ~ 242.* 버전과 호환
          
          ### 설치 방법 (자동 업데이트 지원)
          
          1. IntelliJ IDEA를 열고 `File → Settings → Plugins`로 이동
          2. ⚙️ 톱니바퀴 아이콘 → `Manage Plugin Repositories` 클릭
          3. `+` 버튼을 클릭하고 다음 URL을 추가:
             ```
             https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/updatePlugins.xml
             ```
          4. `OK` 클릭
          5. `Marketplace` 탭에서 "Spectra Jira AI" 검색 후 설치
          
          ### 설정 방법
          설치 후 `File → Settings → Tools → Spectra Jira Settings`에서 플러그인을 설정하세요.
        draft: false
        prerelease: false
        files: |
          ./build/distributions/*.zip

    - name: Prepare GitHub Pages
      run: |
        mkdir -p gh-pages
        cp build/repository/updatePlugins.xml gh-pages/
        
        # Create index.html for repository info
        cat > gh-pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Spectra Jira AI IntelliJ 플러그인 저장소</title>
            <meta charset="utf-8">
            <style>
                body { font-family: 'Malgun Gothic', Arial, sans-serif; margin: 40px; line-height: 1.6; }
                .container { max-width: 800px; margin: 0 auto; }
                code { background: #f4f4f4; padding: 2px 4px; border-radius: 3px; font-family: 'Monaco', 'Consolas', monospace; }
                .url { background: #e8f4fd; padding: 15px; border-radius: 5px; font-family: monospace; margin: 10px 0; border-left: 4px solid #2196F3; }
                .highlight { background: #fff3cd; padding: 10px; border-radius: 5px; border-left: 4px solid #ffc107; }
                h1 { color: #2196F3; }
                h2 { color: #333; border-bottom: 2px solid #eee; padding-bottom: 5px; }
                .method { background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0; }
                .note { background: #d4edda; padding: 10px; border-radius: 5px; border-left: 4px solid #28a745; margin: 15px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🚀 Spectra Jira AI IntelliJ 플러그인 저장소</h1>
                
                <div class="highlight">
                    <strong>📌 최신 버전:</strong> ${{ steps.get_version.outputs.version }}
                </div>
                
                <div class="note">
                    <strong>💡 권장 설치 방법:</strong> 자동 업데이트를 지원하는 커스텀 저장소를 사용하세요.
                </div>
                
                <h2>🔧 설치 방법</h2>
                
                <div class="method">
                    <h3>커스텀 저장소 방식 (자동 업데이트 지원)</h3>
                    <ol>
                        <li>IntelliJ IDEA를 열고 <code>File → Settings → Plugins</code>로 이동</li>
                        <li>⚙️ 톱니바퀴 아이콘을 클릭하고 <code>Manage Plugin Repositories</code> 선택</li>
                        <li><code>+</code> 버튼을 클릭하고 다음 URL을 추가:</li>
                    </ol>
                    
                    <div class="url">
                        https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/updatePlugins.xml
                    </div>
                    
                    <ol start="4">
                        <li><code>OK</code> 버튼 클릭</li>
                        <li><code>Marketplace</code> 탭에서 <strong>"Spectra Jira AI"</strong> 검색</li>
                        <li><code>Install</code> 버튼을 클릭하여 설치</li>
                        <li>IntelliJ IDEA 재시작</li>
                    </ol>
                </div>
                
                <h2>🔄 자동 업데이트</h2>
                <p>커스텀 저장소 방식을 사용하면 플러그인이 자동으로 업데이트를 확인하고 새 버전이 있을 때 알림을 표시합니다. IntelliJ의 플러그인 관리자에서 업데이트 알림을 확인할 수 있습니다.</p>
                
                <h2>⚙️ 설정 방법</h2>
                <p>설치 후 플러그인을 설정하세요:</p>
                <ol>
                    <li><code>File → Settings → Tools → Spectra Jira Settings</code>로 이동</li>
                    <li>Jira 서버 URL, 사용자명, API 토큰을 입력</li>
                    <li>연결을 테스트하고 저장</li>
                </ol>
                
                <h2>🔗 링크</h2>
                <ul>
                    <li><a href="https://github.com/${{ github.repository }}">📂 GitHub 저장소</a></li>
                    <li><a href="https://github.com/${{ github.repository }}/releases">📦 모든 릴리스</a></li>
                    <li><a href="https://github.com/${{ github.repository }}/issues">🐛 문제 신고</a></li>
                    <li><a href="https://github.com/${{ github.repository }}/blob/main/README.md">📖 문서</a></li>
                </ul>
                
                <footer style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #eee; color: #666; text-align: center;">
                    <p>Spectra Team에서 ❤️으로 제작 | 마지막 업데이트: ${{ steps.get_version.outputs.version }}</p>
                </footer>
            </div>
        </body>
        </html>
        EOF

    - name: Setup Pages
      uses: actions/configure-pages@v3
      with:
        enablement: true

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: gh-pages

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

#    - name: Publish to JetBrains Marketplace
#      if: ${{ secrets.PUBLISH_TOKEN }}
#      run: ./gradlew publishPlugin
#      env:
#        PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
