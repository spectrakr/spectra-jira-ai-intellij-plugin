name: Release Plugin

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle wrapper
      uses: actions/cache@v4
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-wrapper-

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/daemon
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests
      run: ./gradlew test

    - name: Build plugin
      run: ./gradlew buildPlugin

    - name: Verify plugin
      run: ./gradlew verifyPlugin

    - name: Prepare plugin repository
      run: ./gradlew preparePluginRepository

    - name: Get version and tag
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "tag_name=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag_name=v${VERSION}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.tag_name }}
        name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## Changes in this Release
          
          - Plugin version: ${{ steps.get_version.outputs.version }}
          - Compatible with IntelliJ IDEA builds 233 to 242.*
          
          ### Installation
          
          **Option 1: Direct Download**
          1. Download the plugin JAR file from the assets below
          2. Go to File → Settings → Plugins → Install Plugin from Disk
          3. Select the downloaded JAR file
          
          **Option 2: Custom Repository (Recommended for Auto-Updates)**
          1. Go to File → Settings → Plugins → Gear Icon → Manage Plugin Repositories
          2. Add: `https://github.com/spectrakr/spectra-jira-ai-intellij-plugin/releases/latest/download/updatePlugins.xml`
          3. Search for "Spectra IntelliJ AI" in the Marketplace tab
          
          ### Configuration
          After installation, configure the plugin in File → Settings → Tools → Spectra Jira Settings
        draft: false
        prerelease: false
        files: |
          ./build/distributions/spectra-intellij-ai-${{ steps.get_version.outputs.version }}.zip
          ./updatePlugins.xml

#    - name: Publish to JetBrains Marketplace
#      if: ${{ secrets.PUBLISH_TOKEN }}
#      run: ./gradlew publishPlugin
#      env:
#        PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
